version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: vc_postgres_codespace
    environment:
      POSTGRES_USER: vc_user
      POSTGRES_PASSWORD: vc_password
      POSTGRES_DB: vc_scoring_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vc_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - vc-network

  redis:
    image: redis:7-alpine
    container_name: vc_redis_codespace
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - vc-network

  app:
    image: mcr.microsoft.com/devcontainers/python:3.10
    container_name: vc_app_codespace
    volumes:
      - ../:/workspace:cached
    command: sleep infinity
    environment:
      - DATABASE_URL=postgresql://vc_user:vc_password@postgres:5432/vc_scoring_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=codespace-dev-secret-key
      - DEBUG=true
    ports:
      - "8000:8000"
      - "8001:8001"
      - "5173:5173"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - vc-network

volumes:
  postgres_data:
  redis_data:

networks:
  vc-network:
    driver: bridge
